{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ahash\\\\Desktop\\\\All Projects\\\\RAG_FastAPI\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { uploadPDF, askQuestion } from \"./api/api\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [fileId, setFileId] = useState(null);\n  const [question, setQuestion] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [chatHistory, setChatHistory] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [mode, setMode] = useState(\"qa\");\n  const fileInputRef = useRef(null);\n  const chatContainerRef = useRef(null);\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [chatHistory, loading]);\n  const parseMCQ = text => {\n    const questions = [];\n    const blocks = text.split(/\\n\\nQ\\d+:/);\n    blocks.forEach((block, idx) => {\n      if (!block.trim()) return;\n      const qMatch = block.match(/^(.*?)(\\nA\\))/s);\n      const qText = qMatch ? qMatch[1].trim() : block.trim();\n      const options = [];\n      const optionRegex = /([A-D])\\)\\s(.*?)(?=\\n[A-D]\\)|\\nCorrect|\\n?$)/gs;\n      let optMatch;\n      while ((optMatch = optionRegex.exec(block)) !== null) {\n        options.push({\n          key: optMatch[1],\n          text: optMatch[2].trim()\n        });\n      }\n      const correctMatch = block.match(/Correct:\\s*([A-D])/);\n      const correct = correctMatch ? correctMatch[1] : null;\n      questions.push({\n        number: idx,\n        question: qText.replace(/^Q\\d+:/, \"\").trim(),\n        options,\n        correct\n      });\n    });\n    return questions.length > 0 ? questions : null;\n  };\n  const handleUpload = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    setUploading(true);\n    setChatHistory([]);\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      formData.append(\"mode\", mode);\n      const res = await uploadPDF(file, mode);\n      setFileId(res.file_id);\n      const newHistory = [{\n        type: \"system\",\n        content: res.message\n      }];\n      if (res.generated_content) {\n        if (mode === \"mcq\") {\n          const mcqs = parseMCQ(res.generated_content);\n          newHistory.push({\n            type: \"ai\",\n            content: mcqs || res.generated_content\n          });\n        } else {\n          newHistory.push({\n            type: \"ai\",\n            content: res.generated_content\n          });\n        }\n      }\n      setChatHistory(newHistory);\n    } catch {\n      setChatHistory([{\n        type: \"system\",\n        content: \"Error uploading PDF\"\n      }]);\n    } finally {\n      setUploading(false);\n    }\n  };\n  const handleAsk = async () => {\n    if (!fileId) {\n      setChatHistory([{\n        type: \"system\",\n        content: \"Please upload a PDF first.\"\n      }]);\n      return;\n    }\n    if (!question.trim()) return;\n    const userMessage = {\n      type: \"user\",\n      content: question\n    };\n    setChatHistory(prev => [...prev, userMessage]);\n    setLoading(true);\n    const currentQuestion = question;\n    setQuestion(\"\");\n    try {\n      const res = await askQuestion(fileId, currentQuestion);\n      let aiMessage;\n      if (mode === \"mcq\") {\n        const mcqs = parseMCQ(res.answer || \"\");\n        aiMessage = {\n          type: \"ai\",\n          content: mcqs || res.answer || \"No answer found.\"\n        };\n      } else {\n        aiMessage = {\n          type: \"ai\",\n          content: res.answer || \"No answer found.\"\n        };\n      }\n      setChatHistory(prev => [...prev, aiMessage]);\n    } catch {\n      const errorMessage = {\n        type: \"ai\",\n        content: \"Error fetching answer. Please try again.\"\n      };\n      setChatHistory(prev => [...prev, errorMessage]);\n    }\n    setLoading(false);\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      handleAsk();\n    }\n  };\n  const triggerFileUpload = () => {\n    var _fileInputRef$current;\n    (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n  };\n  const renderMessageContent = content => {\n    if (Array.isArray(content)) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mcq-container\",\n        children: content.map((mcq, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mcq-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mcq-question\",\n            children: [\"Q\", idx + 1, \": \", mcq.question]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"mcq-options\",\n            children: mcq.options.map(opt => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: `mcq-option ${mcq.correct === opt.key ? \"correct\" : \"\"}`,\n              children: [opt.key, \") \", opt.text]\n            }, opt.key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this), mcq.correct && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mcq-correct\",\n            children: [\"\\u2705 Correct Answer: \", mcq.correct]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this);\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-text\",\n      children: content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"PDF RAG QA/MCQ\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mode-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Mode:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: mode,\n        onChange: e => setMode(e.target.value),\n        disabled: uploading || fileId,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"qa\",\n          children: \"Question Answering\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"mcq\",\n          children: \"Multiple Choice Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chatContainerRef,\n      className: \"chat-container\",\n      children: [chatHistory.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"empty-state\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Upload a PDF to get started\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), chatHistory.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.type}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-sender\",\n          children: msg.type === \"user\" ? \"You\" : msg.type === \"system\" ? \"System\" : \"Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: renderMessageContent(msg.content)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this)), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message ai\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-sender\",\n          children: \"Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content thinking\",\n          children: \"Thinking...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: question,\n          onChange: e => setQuestion(e.target.value),\n          onKeyPress: handleKeyPress,\n          placeholder: \"Ask a question...\",\n          disabled: loading || !fileId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAsk,\n          disabled: loading || !question.trim() || !fileId,\n          className: \"ask-button\",\n          children: \"Ask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"application/pdf\",\n          onChange: handleUpload,\n          ref: fileInputRef,\n          className: \"file-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: triggerFileUpload,\n          disabled: uploading,\n          className: \"upload-button\",\n          children: uploading ? \"Uploading...\" : \"Upload PDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"z2Bogqpz/Sdy53kjt4c/nSdJUnY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","uploadPDF","askQuestion","jsxDEV","_jsxDEV","App","_s","fileId","setFileId","question","setQuestion","loading","setLoading","chatHistory","setChatHistory","uploading","setUploading","mode","setMode","fileInputRef","chatContainerRef","current","scrollTop","scrollHeight","parseMCQ","text","questions","blocks","split","forEach","block","idx","trim","qMatch","match","qText","options","optionRegex","optMatch","exec","push","key","correctMatch","correct","number","replace","length","handleUpload","e","file","target","files","formData","FormData","append","res","file_id","newHistory","type","content","message","generated_content","mcqs","handleAsk","userMessage","prev","currentQuestion","aiMessage","answer","errorMessage","handleKeyPress","shiftKey","preventDefault","triggerFileUpload","_fileInputRef$current","click","renderMessageContent","Array","isArray","className","children","map","mcq","fileName","_jsxFileName","lineNumber","columnNumber","opt","value","onChange","disabled","ref","msg","index","onKeyPress","placeholder","onClick","accept","_c","$RefreshReg$"],"sources":["C:/Users/ahash/Desktop/All Projects/RAG_FastAPI/frontend/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport { uploadPDF, askQuestion } from \"./api/api\";\nimport \"./App.css\";\nfunction App() {\n  const [fileId, setFileId] = useState(null);\n  const [question, setQuestion] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [chatHistory, setChatHistory] = useState([]);\n  const [uploading, setUploading] = useState(false);\n  const [mode, setMode] = useState(\"qa\");\n  const fileInputRef = useRef(null);\n  const chatContainerRef = useRef(null);\n\n  useEffect(() => {\n    if (chatContainerRef.current) {\n      chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }\n  }, [chatHistory, loading]);\n\n  const parseMCQ = (text) => {\n    const questions = [];\n    const blocks = text.split(/\\n\\nQ\\d+:/);\n    blocks.forEach((block, idx) => {\n      if (!block.trim()) return;\n      const qMatch = block.match(/^(.*?)(\\nA\\))/s);\n      const qText = qMatch ? qMatch[1].trim() : block.trim();\n\n      const options = [];\n      const optionRegex = /([A-D])\\)\\s(.*?)(?=\\n[A-D]\\)|\\nCorrect|\\n?$)/gs;\n      let optMatch;\n      while ((optMatch = optionRegex.exec(block)) !== null) {\n        options.push({ key: optMatch[1], text: optMatch[2].trim() });\n      }\n\n      const correctMatch = block.match(/Correct:\\s*([A-D])/);\n      const correct = correctMatch ? correctMatch[1] : null;\n\n      questions.push({\n        number: idx,\n        question: qText.replace(/^Q\\d+:/, \"\").trim(),\n        options,\n        correct,\n      });\n    });\n    return questions.length > 0 ? questions : null;\n  };\n\n  const handleUpload = async (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n\n    setUploading(true);\n    setChatHistory([]);\n\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      formData.append(\"mode\", mode);\n\n      const res = await uploadPDF(file, mode);\n      setFileId(res.file_id);\n\n      const newHistory = [\n        {\n          type: \"system\",\n          content: res.message,\n        },\n      ];\n\n      if (res.generated_content) {\n        if (mode === \"mcq\") {\n          const mcqs = parseMCQ(res.generated_content);\n          newHistory.push({ type: \"ai\", content: mcqs || res.generated_content });\n        } else {\n          newHistory.push({ type: \"ai\", content: res.generated_content });\n        }\n      }\n\n      setChatHistory(newHistory);\n    } catch {\n      setChatHistory([{ type: \"system\", content: \"Error uploading PDF\" }]);\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  const handleAsk = async () => {\n    if (!fileId) {\n      setChatHistory([{ type: \"system\", content: \"Please upload a PDF first.\" }]);\n      return;\n    }\n    if (!question.trim()) return;\n\n    const userMessage = { type: \"user\", content: question };\n    setChatHistory((prev) => [...prev, userMessage]);\n\n    setLoading(true);\n    const currentQuestion = question;\n    setQuestion(\"\");\n\n    try {\n      const res = await askQuestion(fileId, currentQuestion);\n\n      let aiMessage;\n      if (mode === \"mcq\") {\n        const mcqs = parseMCQ(res.answer || \"\");\n        aiMessage = {\n          type: \"ai\",\n          content: mcqs || res.answer || \"No answer found.\",\n        };\n      } else {\n        aiMessage = {\n          type: \"ai\",\n          content: res.answer || \"No answer found.\",\n        };\n      }\n\n      setChatHistory((prev) => [...prev, aiMessage]);\n    } catch {\n      const errorMessage = {\n        type: \"ai\",\n        content: \"Error fetching answer. Please try again.\",\n      };\n      setChatHistory((prev) => [...prev, errorMessage]);\n    }\n\n    setLoading(false);\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      handleAsk();\n    }\n  };\n\n  const triggerFileUpload = () => {\n    fileInputRef.current?.click();\n  };\n\n  const renderMessageContent = (content) => {\n    if (Array.isArray(content)) {\n      return (\n        <div className=\"mcq-container\">\n          {content.map((mcq, idx) => (\n            <div key={idx} className=\"mcq-card\">\n              <div className=\"mcq-question\">\n                Q{idx + 1}: {mcq.question}\n              </div>\n              <ul className=\"mcq-options\">\n                {mcq.options.map((opt) => (\n                  <li\n                    key={opt.key}\n                    className={`mcq-option ${mcq.correct === opt.key ? \"correct\" : \"\"}`}\n                  >\n                    {opt.key}) {opt.text}\n                  </li>\n                ))}\n              </ul>\n              {mcq.correct && (\n                <div className=\"mcq-correct\">\n                  ✅ Correct Answer: {mcq.correct}\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      );\n    }\n\n    return <div className=\"message-text\">{content}</div>;\n  };\n\n  return (\n    <div className=\"app-container\">\n      <header className=\"app-header\">\n        <h1>PDF RAG QA/MCQ</h1>\n      </header>\n\n      <div className=\"mode-selector\">\n        <label>Select Mode:</label>\n        <select\n          value={mode}\n          onChange={(e) => setMode(e.target.value)}\n          disabled={uploading || fileId}\n        >\n          <option value=\"qa\">Question Answering</option>\n          <option value=\"mcq\">Multiple Choice Questions</option>\n        </select>\n      </div>\n\n      <div ref={chatContainerRef} className=\"chat-container\">\n        {chatHistory.length === 0 && (\n          <div className=\"empty-state\">\n            <p>Upload a PDF to get started</p>\n          </div>\n        )}\n        \n        {chatHistory.map((msg, index) => (\n          <div key={index} className={`message ${msg.type}`}>\n            <div className=\"message-sender\">{msg.type === \"user\" ? \"You\" : msg.type === \"system\" ? \"System\" : \"Assistant\"}</div>\n            <div className=\"message-content\">{renderMessageContent(msg.content)}</div>\n          </div>\n        ))}\n        \n        {loading && (\n          <div className=\"message ai\">\n            <div className=\"message-sender\">Assistant</div>\n            <div className=\"message-content thinking\">Thinking...</div>\n          </div>\n        )}\n      </div>\n\n      <div className=\"input-container\">\n        <div className=\"input-row\">\n          <input\n            type=\"text\"\n            value={question}\n            onChange={(e) => setQuestion(e.target.value)}\n            onKeyPress={handleKeyPress}\n            placeholder=\"Ask a question...\"\n            disabled={loading || !fileId}\n          />\n          <button \n            onClick={handleAsk} \n            disabled={loading || !question.trim() || !fileId}\n            className=\"ask-button\"\n          >\n            Ask\n          </button>\n        </div>\n        \n        <div className=\"upload-row\">\n          <input\n            type=\"file\"\n            accept=\"application/pdf\"\n            onChange={handleUpload}\n            ref={fileInputRef}\n            className=\"file-input\"\n          />\n          <button \n            onClick={triggerFileUpload} \n            disabled={uploading}\n            className=\"upload-button\"\n          >\n            {uploading ? \"Uploading...\" : \"Upload PDF\"}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,SAASC,SAAS,EAAEC,WAAW,QAAQ,WAAW;AAClD,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACe,WAAW,EAAEC,cAAc,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACmB,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMqB,YAAY,GAAGpB,MAAM,CAAC,IAAI,CAAC;EACjC,MAAMqB,gBAAgB,GAAGrB,MAAM,CAAC,IAAI,CAAC;EAErCC,SAAS,CAAC,MAAM;IACd,IAAIoB,gBAAgB,CAACC,OAAO,EAAE;MAC5BD,gBAAgB,CAACC,OAAO,CAACC,SAAS,GAAGF,gBAAgB,CAACC,OAAO,CAACE,YAAY;IAC5E;EACF,CAAC,EAAE,CAACV,WAAW,EAAEF,OAAO,CAAC,CAAC;EAE1B,MAAMa,QAAQ,GAAIC,IAAI,IAAK;IACzB,MAAMC,SAAS,GAAG,EAAE;IACpB,MAAMC,MAAM,GAAGF,IAAI,CAACG,KAAK,CAAC,WAAW,CAAC;IACtCD,MAAM,CAACE,OAAO,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAK;MAC7B,IAAI,CAACD,KAAK,CAACE,IAAI,CAAC,CAAC,EAAE;MACnB,MAAMC,MAAM,GAAGH,KAAK,CAACI,KAAK,CAAC,gBAAgB,CAAC;MAC5C,MAAMC,KAAK,GAAGF,MAAM,GAAGA,MAAM,CAAC,CAAC,CAAC,CAACD,IAAI,CAAC,CAAC,GAAGF,KAAK,CAACE,IAAI,CAAC,CAAC;MAEtD,MAAMI,OAAO,GAAG,EAAE;MAClB,MAAMC,WAAW,GAAG,gDAAgD;MACpE,IAAIC,QAAQ;MACZ,OAAO,CAACA,QAAQ,GAAGD,WAAW,CAACE,IAAI,CAACT,KAAK,CAAC,MAAM,IAAI,EAAE;QACpDM,OAAO,CAACI,IAAI,CAAC;UAAEC,GAAG,EAAEH,QAAQ,CAAC,CAAC,CAAC;UAAEb,IAAI,EAAEa,QAAQ,CAAC,CAAC,CAAC,CAACN,IAAI,CAAC;QAAE,CAAC,CAAC;MAC9D;MAEA,MAAMU,YAAY,GAAGZ,KAAK,CAACI,KAAK,CAAC,oBAAoB,CAAC;MACtD,MAAMS,OAAO,GAAGD,YAAY,GAAGA,YAAY,CAAC,CAAC,CAAC,GAAG,IAAI;MAErDhB,SAAS,CAACc,IAAI,CAAC;QACbI,MAAM,EAAEb,GAAG;QACXtB,QAAQ,EAAE0B,KAAK,CAACU,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAACb,IAAI,CAAC,CAAC;QAC5CI,OAAO;QACPO;MACF,CAAC,CAAC;IACJ,CAAC,CAAC;IACF,OAAOjB,SAAS,CAACoB,MAAM,GAAG,CAAC,GAAGpB,SAAS,GAAG,IAAI;EAChD,CAAC;EAED,MAAMqB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChC,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAI,CAACF,IAAI,EAAE;IAEXjC,YAAY,CAAC,IAAI,CAAC;IAClBF,cAAc,CAAC,EAAE,CAAC;IAElB,IAAI;MACF,MAAMsC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEL,IAAI,CAAC;MAC7BG,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAErC,IAAI,CAAC;MAE7B,MAAMsC,GAAG,GAAG,MAAMtD,SAAS,CAACgD,IAAI,EAAEhC,IAAI,CAAC;MACvCT,SAAS,CAAC+C,GAAG,CAACC,OAAO,CAAC;MAEtB,MAAMC,UAAU,GAAG,CACjB;QACEC,IAAI,EAAE,QAAQ;QACdC,OAAO,EAAEJ,GAAG,CAACK;MACf,CAAC,CACF;MAED,IAAIL,GAAG,CAACM,iBAAiB,EAAE;QACzB,IAAI5C,IAAI,KAAK,KAAK,EAAE;UAClB,MAAM6C,IAAI,GAAGtC,QAAQ,CAAC+B,GAAG,CAACM,iBAAiB,CAAC;UAC5CJ,UAAU,CAACjB,IAAI,CAAC;YAAEkB,IAAI,EAAE,IAAI;YAAEC,OAAO,EAAEG,IAAI,IAAIP,GAAG,CAACM;UAAkB,CAAC,CAAC;QACzE,CAAC,MAAM;UACLJ,UAAU,CAACjB,IAAI,CAAC;YAAEkB,IAAI,EAAE,IAAI;YAAEC,OAAO,EAAEJ,GAAG,CAACM;UAAkB,CAAC,CAAC;QACjE;MACF;MAEA/C,cAAc,CAAC2C,UAAU,CAAC;IAC5B,CAAC,CAAC,MAAM;MACN3C,cAAc,CAAC,CAAC;QAAE4C,IAAI,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAAsB,CAAC,CAAC,CAAC;IACtE,CAAC,SAAS;MACR3C,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAM+C,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI,CAACxD,MAAM,EAAE;MACXO,cAAc,CAAC,CAAC;QAAE4C,IAAI,EAAE,QAAQ;QAAEC,OAAO,EAAE;MAA6B,CAAC,CAAC,CAAC;MAC3E;IACF;IACA,IAAI,CAAClD,QAAQ,CAACuB,IAAI,CAAC,CAAC,EAAE;IAEtB,MAAMgC,WAAW,GAAG;MAAEN,IAAI,EAAE,MAAM;MAAEC,OAAO,EAAElD;IAAS,CAAC;IACvDK,cAAc,CAAEmD,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,WAAW,CAAC,CAAC;IAEhDpD,UAAU,CAAC,IAAI,CAAC;IAChB,MAAMsD,eAAe,GAAGzD,QAAQ;IAChCC,WAAW,CAAC,EAAE,CAAC;IAEf,IAAI;MACF,MAAM6C,GAAG,GAAG,MAAMrD,WAAW,CAACK,MAAM,EAAE2D,eAAe,CAAC;MAEtD,IAAIC,SAAS;MACb,IAAIlD,IAAI,KAAK,KAAK,EAAE;QAClB,MAAM6C,IAAI,GAAGtC,QAAQ,CAAC+B,GAAG,CAACa,MAAM,IAAI,EAAE,CAAC;QACvCD,SAAS,GAAG;UACVT,IAAI,EAAE,IAAI;UACVC,OAAO,EAAEG,IAAI,IAAIP,GAAG,CAACa,MAAM,IAAI;QACjC,CAAC;MACH,CAAC,MAAM;QACLD,SAAS,GAAG;UACVT,IAAI,EAAE,IAAI;UACVC,OAAO,EAAEJ,GAAG,CAACa,MAAM,IAAI;QACzB,CAAC;MACH;MAEAtD,cAAc,CAAEmD,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEE,SAAS,CAAC,CAAC;IAChD,CAAC,CAAC,MAAM;MACN,MAAME,YAAY,GAAG;QACnBX,IAAI,EAAE,IAAI;QACVC,OAAO,EAAE;MACX,CAAC;MACD7C,cAAc,CAAEmD,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEI,YAAY,CAAC,CAAC;IACnD;IAEAzD,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC;EAED,MAAM0D,cAAc,GAAItB,CAAC,IAAK;IAC5B,IAAIA,CAAC,CAACP,GAAG,KAAK,OAAO,IAAI,CAACO,CAAC,CAACuB,QAAQ,EAAE;MACpCvB,CAAC,CAACwB,cAAc,CAAC,CAAC;MAClBT,SAAS,CAAC,CAAC;IACb;EACF,CAAC;EAED,MAAMU,iBAAiB,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA;IAC9B,CAAAA,qBAAA,GAAAvD,YAAY,CAACE,OAAO,cAAAqD,qBAAA,uBAApBA,qBAAA,CAAsBC,KAAK,CAAC,CAAC;EAC/B,CAAC;EAED,MAAMC,oBAAoB,GAAIjB,OAAO,IAAK;IACxC,IAAIkB,KAAK,CAACC,OAAO,CAACnB,OAAO,CAAC,EAAE;MAC1B,oBACEvD,OAAA;QAAK2E,SAAS,EAAC,eAAe;QAAAC,QAAA,EAC3BrB,OAAO,CAACsB,GAAG,CAAC,CAACC,GAAG,EAAEnD,GAAG,kBACpB3B,OAAA;UAAe2E,SAAS,EAAC,UAAU;UAAAC,QAAA,gBACjC5E,OAAA;YAAK2E,SAAS,EAAC,cAAc;YAAAC,QAAA,GAAC,GAC3B,EAACjD,GAAG,GAAG,CAAC,EAAC,IAAE,EAACmD,GAAG,CAACzE,QAAQ;UAAA;YAAA0E,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtB,CAAC,eACNlF,OAAA;YAAI2E,SAAS,EAAC,aAAa;YAAAC,QAAA,EACxBE,GAAG,CAAC9C,OAAO,CAAC6C,GAAG,CAAEM,GAAG,iBACnBnF,OAAA;cAEE2E,SAAS,EAAE,cAAcG,GAAG,CAACvC,OAAO,KAAK4C,GAAG,CAAC9C,GAAG,GAAG,SAAS,GAAG,EAAE,EAAG;cAAAuC,QAAA,GAEnEO,GAAG,CAAC9C,GAAG,EAAC,IAAE,EAAC8C,GAAG,CAAC9D,IAAI;YAAA,GAHf8D,GAAG,CAAC9C,GAAG;cAAA0C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAIV,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC,EACJJ,GAAG,CAACvC,OAAO,iBACVvC,OAAA;YAAK2E,SAAS,EAAC,aAAa;YAAAC,QAAA,GAAC,yBACT,EAACE,GAAG,CAACvC,OAAO;UAAA;YAAAwC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CACN;QAAA,GAlBOvD,GAAG;UAAAoD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAmBR,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAEV;IAEA,oBAAOlF,OAAA;MAAK2E,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAErB;IAAO;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACtD,CAAC;EAED,oBACElF,OAAA;IAAK2E,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5B5E,OAAA;MAAQ2E,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC5B5E,OAAA;QAAA4E,QAAA,EAAI;MAAc;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eAETlF,OAAA;MAAK2E,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5B5E,OAAA;QAAA4E,QAAA,EAAO;MAAY;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3BlF,OAAA;QACEoF,KAAK,EAAEvE,IAAK;QACZwE,QAAQ,EAAGzC,CAAC,IAAK9B,OAAO,CAAC8B,CAAC,CAACE,MAAM,CAACsC,KAAK,CAAE;QACzCE,QAAQ,EAAE3E,SAAS,IAAIR,MAAO;QAAAyE,QAAA,gBAE9B5E,OAAA;UAAQoF,KAAK,EAAC,IAAI;UAAAR,QAAA,EAAC;QAAkB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC9ClF,OAAA;UAAQoF,KAAK,EAAC,KAAK;UAAAR,QAAA,EAAC;QAAyB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAENlF,OAAA;MAAKuF,GAAG,EAAEvE,gBAAiB;MAAC2D,SAAS,EAAC,gBAAgB;MAAAC,QAAA,GACnDnE,WAAW,CAACiC,MAAM,KAAK,CAAC,iBACvB1C,OAAA;QAAK2E,SAAS,EAAC,aAAa;QAAAC,QAAA,eAC1B5E,OAAA;UAAA4E,QAAA,EAAG;QAA2B;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CACN,EAEAzE,WAAW,CAACoE,GAAG,CAAC,CAACW,GAAG,EAAEC,KAAK,kBAC1BzF,OAAA;QAAiB2E,SAAS,EAAE,WAAWa,GAAG,CAAClC,IAAI,EAAG;QAAAsB,QAAA,gBAChD5E,OAAA;UAAK2E,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAEY,GAAG,CAAClC,IAAI,KAAK,MAAM,GAAG,KAAK,GAAGkC,GAAG,CAAClC,IAAI,KAAK,QAAQ,GAAG,QAAQ,GAAG;QAAW;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACpHlF,OAAA;UAAK2E,SAAS,EAAC,iBAAiB;UAAAC,QAAA,EAAEJ,oBAAoB,CAACgB,GAAG,CAACjC,OAAO;QAAC;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA,GAFlEO,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACN,CAAC,EAED3E,OAAO,iBACNP,OAAA;QAAK2E,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB5E,OAAA;UAAK2E,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAC;QAAS;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC/ClF,OAAA;UAAK2E,SAAS,EAAC,0BAA0B;UAAAC,QAAA,EAAC;QAAW;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eAENlF,OAAA;MAAK2E,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9B5E,OAAA;QAAK2E,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxB5E,OAAA;UACEsD,IAAI,EAAC,MAAM;UACX8B,KAAK,EAAE/E,QAAS;UAChBgF,QAAQ,EAAGzC,CAAC,IAAKtC,WAAW,CAACsC,CAAC,CAACE,MAAM,CAACsC,KAAK,CAAE;UAC7CM,UAAU,EAAExB,cAAe;UAC3ByB,WAAW,EAAC,mBAAmB;UAC/BL,QAAQ,EAAE/E,OAAO,IAAI,CAACJ;QAAO;UAAA4E,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC,eACFlF,OAAA;UACE4F,OAAO,EAAEjC,SAAU;UACnB2B,QAAQ,EAAE/E,OAAO,IAAI,CAACF,QAAQ,CAACuB,IAAI,CAAC,CAAC,IAAI,CAACzB,MAAO;UACjDwE,SAAS,EAAC,YAAY;UAAAC,QAAA,EACvB;QAED;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eAENlF,OAAA;QAAK2E,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB5E,OAAA;UACEsD,IAAI,EAAC,MAAM;UACXuC,MAAM,EAAC,iBAAiB;UACxBR,QAAQ,EAAE1C,YAAa;UACvB4C,GAAG,EAAExE,YAAa;UAClB4D,SAAS,EAAC;QAAY;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC,eACFlF,OAAA;UACE4F,OAAO,EAAEvB,iBAAkB;UAC3BiB,QAAQ,EAAE3E,SAAU;UACpBgE,SAAS,EAAC,eAAe;UAAAC,QAAA,EAExBjE,SAAS,GAAG,cAAc,GAAG;QAAY;UAAAoE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAChF,EAAA,CAxPQD,GAAG;AAAA6F,EAAA,GAAH7F,GAAG;AA0PZ,eAAeA,GAAG;AAAC,IAAA6F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}